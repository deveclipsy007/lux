"""\nConfigura√ß√£o Swagger/OpenAPI para Evolution API\n\nImplementa:\n- Configura√ß√£o completa do OpenAPI 3.0\n- Schemas de autentica√ß√£o\n- Documenta√ß√£o de endpoints\n- Exemplos de uso\n- Configura√ß√µes de seguran√ßa\n\nAutor: AgnoMaster - Evolution API Documentation Expert\nData: 2025-01-24\n"""\n\nfrom typing import Dict, Any, List, Optional\nfrom fastapi import FastAPI\nfrom fastapi.openapi.utils import get_openapi\nfrom fastapi.openapi.docs import get_swagger_ui_html, get_redoc_html\nfrom fastapi.responses import HTMLResponse\nimport json\n\n\nclass SwaggerConfig:\n    \"\"\"\n    Configura√ß√£o do Swagger/OpenAPI para Evolution API\n    \"\"\"\n    \n    def __init__(self, app: FastAPI, version: str = \"1.0.0\"):\n        self.app = app\n        self.version = version\n        self.title = \"Evolution API - WhatsApp Integration\"\n        self.description = self._get_api_description()\n        self.contact = {\n            \"name\": \"Evolution API Support\",\n            \"url\": \"https://github.com/EvolutionAPI/evolution-api\",\n            \"email\": \"support@evolution-api.com\"\n        }\n        self.license_info = {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n        }\n        \n    def _get_api_description(self) -> str:\n        \"\"\"Retorna descri√ß√£o detalhada da API\"\"\"\n        return \"\"\"\n        ## Evolution API - Integra√ß√£o WhatsApp Empresarial\n        \n        A Evolution API √© uma solu√ß√£o completa para integra√ß√£o com WhatsApp Business,\n        oferecendo recursos avan√ßados para automa√ß√£o, gest√£o de inst√¢ncias e\n        processamento de mensagens em tempo real.\n        \n        ### üöÄ Recursos Principais\n        \n        - **Gest√£o de Inst√¢ncias**: Cria√ß√£o e gerenciamento de m√∫ltiplas inst√¢ncias WhatsApp\n        - **Mensagens em Tempo Real**: Envio e recebimento com WebSockets\n        - **Agentes Inteligentes**: Integra√ß√£o com framework Agno para automa√ß√£o\n        - **Autentica√ß√£o Segura**: JWT + API Keys com controle granular\n        - **Rate Limiting**: Prote√ß√£o contra abuso e sobrecarga\n        - **Webhooks**: Notifica√ß√µes em tempo real para eventos\n        - **Monitoramento**: M√©tricas e logs detalhados\n        \n        ### üîê Autentica√ß√£o\n        \n        A API suporta dois m√©todos de autentica√ß√£o:\n        \n        1. **JWT Bearer Token**: Para aplica√ß√µes web e mobile\n        2. **API Key**: Para integra√ß√µes server-to-server\n        \n        ### üìä Rate Limiting\n        \n        - **Padr√£o**: 100 requests/minuto\n        - **Premium**: 1000 requests/minuto\n        - **Enterprise**: Sem limites\n        \n        ### üåê WebSockets\n        \n        Conecte-se ao endpoint `/ws` para receber eventos em tempo real:\n        \n        - Mensagens recebidas/enviadas\n        - Status de inst√¢ncias\n        - Eventos de agentes\n        - M√©tricas do sistema\n        \n        ### üìù Exemplos de Uso\n        \n        Consulte a se√ß√£o de exemplos abaixo para implementa√ß√µes pr√°ticas\n        em diferentes linguagens de programa√ß√£o.\n        \"\"\"\n    \n    def get_openapi_schema(self) -> Dict[str, Any]:\n        \"\"\"Gera schema OpenAPI customizado\"\"\"\n        if self.app.openapi_schema:\n            return self.app.openapi_schema\n        \n        openapi_schema = get_openapi(\n            title=self.title,\n            version=self.version,\n            description=self.description,\n            routes=self.app.routes,\n            contact=self.contact,\n            license_info=self.license_info\n        )\n        \n        # Adiciona configura√ß√µes de seguran√ßa\n        openapi_schema[\"components\"][\"securitySchemes\"] = self._get_security_schemes()\n        \n        # Adiciona tags\n        openapi_schema[\"tags\"] = self._get_tags()\n        \n        # Adiciona servidores\n        openapi_schema[\"servers\"] = self._get_servers()\n        \n        # Adiciona exemplos globais\n        openapi_schema[\"components\"][\"examples\"] = self._get_global_examples()\n        \n        # Adiciona headers customizados\n        openapi_schema[\"components\"][\"headers\"] = self._get_custom_headers()\n        \n        self.app.openapi_schema = openapi_schema\n        return openapi_schema\n    \n    def _get_security_schemes(self) -> Dict[str, Any]:\n        \"\"\"Define esquemas de seguran√ßa\"\"\"\n        return {\n            \"BearerAuth\": {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"bearerFormat\": \"JWT\",\n                \"description\": \"JWT token obtido atrav√©s do endpoint /auth/login\"\n            },\n            \"ApiKeyAuth\": {\n                \"type\": \"apiKey\",\n                \"in\": \"header\",\n                \"name\": \"X-API-Key\",\n                \"description\": \"API Key para autentica√ß√£o server-to-server\"\n            },\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"authorizationUrl\": \"/auth/oauth/authorize\",\n                        \"tokenUrl\": \"/auth/oauth/token\",\n                        \"scopes\": {\n                            \"read\": \"Acesso de leitura\",\n                            \"write\": \"Acesso de escrita\",\n                            \"admin\": \"Acesso administrativo\",\n                            \"instances:manage\": \"Gerenciar inst√¢ncias\",\n                            \"messages:send\": \"Enviar mensagens\",\n                            \"agents:create\": \"Criar agentes\",\n                            \"webhooks:manage\": \"Gerenciar webhooks\"\n                        }\n                    }\n                }\n            }\n        }\n    \n    def _get_tags(self) -> List[Dict[str, Any]]:\n        \"\"\"Define tags para organiza√ß√£o\"\"\"\n        return [\n            {\n                \"name\": \"Authentication\",\n                \"description\": \"Endpoints de autentica√ß√£o e autoriza√ß√£o\",\n                \"externalDocs\": {\n                    \"description\": \"Documenta√ß√£o de Autentica√ß√£o\",\n                    \"url\": \"https://docs.evolution-api.com/auth\"\n                }\n            },\n            {\n                \"name\": \"Instances\",\n                \"description\": \"Gerenciamento de inst√¢ncias WhatsApp\",\n                \"externalDocs\": {\n                    \"description\": \"Guia de Inst√¢ncias\",\n                    \"url\": \"https://docs.evolution-api.com/instances\"\n                }\n            },\n            {\n                \"name\": \"Messages\",\n                \"description\": \"Envio e recebimento de mensagens\",\n                \"externalDocs\": {\n                    \"description\": \"API de Mensagens\",\n                    \"url\": \"https://docs.evolution-api.com/messages\"\n                }\n            },\n            {\n                \"name\": \"Agents\",\n                \"description\": \"Agentes inteligentes com framework Agno\",\n                \"externalDocs\": {\n                    \"description\": \"Documenta√ß√£o Agno\",\n                    \"url\": \"https://docs.agno.ai\"\n                }\n            },\n            {\n                \"name\": \"Webhooks\",\n                \"description\": \"Configura√ß√£o de webhooks para eventos\",\n                \"externalDocs\": {\n                    \"description\": \"Guia de Webhooks\",\n                    \"url\": \"https://docs.evolution-api.com/webhooks\"\n                }\n            },\n            {\n                \"name\": \"WebSockets\",\n                \"description\": \"Conex√µes em tempo real\",\n                \"externalDocs\": {\n                    \"description\": \"WebSocket API\",\n                    \"url\": \"https://docs.evolution-api.com/websockets\"\n                }\n            },\n            {\n                \"name\": \"System\",\n                \"description\": \"Monitoramento e administra√ß√£o do sistema\",\n                \"externalDocs\": {\n                    \"description\": \"Admin Guide\",\n                    \"url\": \"https://docs.evolution-api.com/admin\"\n                }\n            }\n        ]\n    \n    def _get_servers(self) -> List[Dict[str, Any]]:\n        \"\"\"Define servidores dispon√≠veis\"\"\"\n        return [\n            {\n                \"url\": \"http://localhost:8000\",\n                \"description\": \"Servidor de Desenvolvimento\"\n            },\n            {\n                \"url\": \"https://staging-api.evolution.com\",\n                \"description\": \"Servidor de Staging\"\n            },\n            {\n                \"url\": \"https://api.evolution.com\",\n                \"description\": \"Servidor de Produ√ß√£o\"\n            }\n        ]\n    \n    def _get_global_examples(self) -> Dict[str, Any]:\n        \"\"\"Exemplos globais reutiliz√°veis\"\"\"\n        return {\n            \"SuccessResponse\": {\n                \"summary\": \"Resposta de sucesso padr√£o\",\n                \"value\": {\n                    \"success\": True,\n                    \"message\": \"Opera√ß√£o realizada com sucesso\",\n                    \"timestamp\": \"2025-01-24T10:30:00Z\",\n                    \"request_id\": \"req_123456789\"\n                }\n            },\n            \"ErrorResponse\": {\n                \"summary\": \"Resposta de erro padr√£o\",\n                \"value\": {\n                    \"success\": False,\n                    \"error\": {\n                        \"code\": \"VALIDATION_ERROR\",\n                        \"message\": \"Dados inv√°lidos fornecidos\",\n                        \"details\": [\n                            {\n                                \"field\": \"phone\",\n                                \"message\": \"N√∫mero de telefone inv√°lido\"\n                            }\n                        ]\n                    },\n                    \"timestamp\": \"2025-01-24T10:30:00Z\",\n                    \"request_id\": \"req_123456789\"\n                }\n            },\n            \"RateLimitResponse\": {\n                \"summary\": \"Resposta de rate limit excedido\",\n                \"value\": {\n                    \"success\": False,\n                    \"error\": {\n                        \"code\": \"RATE_LIMIT_EXCEEDED\",\n                        \"message\": \"Limite de requisi√ß√µes excedido\",\n                        \"retry_after\": 60\n                    },\n                    \"timestamp\": \"2025-01-24T10:30:00Z\",\n                    \"request_id\": \"req_123456789\"\n                }\n            },\n            \"UnauthorizedResponse\": {\n                \"summary\": \"Resposta de n√£o autorizado\",\n                \"value\": {\n                    \"success\": False,\n                    \"error\": {\n                        \"code\": \"UNAUTHORIZED\",\n                        \"message\": \"Token de acesso inv√°lido ou expirado\"\n                    },\n                    \"timestamp\": \"2025-01-24T10:30:00Z\",\n                    \"request_id\": \"req_123456789\"\n                }\n            }\n        }\n    \n    def _get_custom_headers(self) -> Dict[str, Any]:\n        \"\"\"Headers customizados\"\"\"\n        return {\n            \"X-Request-ID\": {\n                \"description\": \"ID √∫nico da requisi√ß√£o para rastreamento\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"req_123456789\"\n                }\n            },\n            \"X-Rate-Limit-Remaining\": {\n                \"description\": \"N√∫mero de requisi√ß√µes restantes no per√≠odo\",\n                \"schema\": {\n                    \"type\": \"integer\",\n                    \"example\": 95\n                }\n            },\n            \"X-Rate-Limit-Reset\": {\n                \"description\": \"Timestamp quando o rate limit ser√° resetado\",\n                \"schema\": {\n                    \"type\": \"integer\",\n                    \"example\": 1706097000\n                }\n            },\n            \"X-Response-Time\": {\n                \"description\": \"Tempo de resposta em milissegundos\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"125ms\"\n                }\n            }\n        }\n    \n    def setup_custom_docs(self):\n        \"\"\"Configura documenta√ß√£o customizada\"\"\"\n        \n        @self.app.get(\"/docs\", include_in_schema=False)\n        async def custom_swagger_ui_html():\n            return get_swagger_ui_html(\n                openapi_url=self.app.openapi_url,\n                title=f\"{self.title} - Swagger UI\",\n                oauth2_redirect_url=self.app.swagger_ui_oauth2_redirect_url,\n                swagger_js_url=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui-bundle.js\",\n                swagger_css_url=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui.css\",\n                swagger_ui_parameters={\n                    \"deepLinking\": True,\n                    \"displayRequestDuration\": True,\n                    \"docExpansion\": \"none\",\n                    \"operationsSorter\": \"alpha\",\n                    \"filter\": True,\n                    \"showExtensions\": True,\n                    \"showCommonExtensions\": True,\n                    \"tryItOutEnabled\": True\n                }\n            )\n        \n        @self.app.get(\"/redoc\", include_in_schema=False)\n        async def redoc_html():\n            return get_redoc_html(\n                openapi_url=self.app.openapi_url,\n                title=f\"{self.title} - ReDoc\",\n                redoc_js_url=\"https://cdn.jsdelivr.net/npm/redoc@2.1.0/bundles/redoc.standalone.js\",\n            )\n        \n        @self.app.get(\"/openapi.json\", include_in_schema=False)\n        async def get_openapi_endpoint():\n            return self.get_openapi_schema()\n        \n        @self.app.get(\"/docs/postman\", include_in_schema=False)\n        async def get_postman_collection():\n            \"\"\"Gera cole√ß√£o do Postman\"\"\"\n            return self._generate_postman_collection()\n        \n        @self.app.get(\"/docs/insomnia\", include_in_schema=False)\n        async def get_insomnia_collection():\n            \"\"\"Gera cole√ß√£o do Insomnia\"\"\"\n            return self._generate_insomnia_collection()\n    \n    def _generate_postman_collection(self) -> Dict[str, Any]:\n        \"\"\"Gera cole√ß√£o do Postman\"\"\"\n        schema = self.get_openapi_schema()\n        \n        collection = {\n            \"info\": {\n                \"name\": self.title,\n                \"description\": self.description,\n                \"version\": self.version,\n                \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n            },\n            \"auth\": {\n                \"type\": \"bearer\",\n                \"bearer\": [\n                    {\n                        \"key\": \"token\",\n                        \"value\": \"{{jwt_token}}\",\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"variable\": [\n                {\n                    \"key\": \"base_url\",\n                    \"value\": \"http://localhost:8000\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"key\": \"jwt_token\",\n                    \"value\": \"\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"key\": \"api_key\",\n                    \"value\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"item\": []\n        }\n        \n        # TODO: Converter paths do OpenAPI para requests do Postman\n        \n        return collection\n    \n    def _generate_insomnia_collection(self) -> Dict[str, Any]:\n        \"\"\"Gera cole√ß√£o do Insomnia\"\"\"\n        schema = self.get_openapi_schema()\n        \n        collection = {\n            \"_type\": \"export\",\n            \"__export_format\": 4,\n            \"__export_date\": \"2025-01-24T10:30:00.000Z\",\n            \"__export_source\": \"evolution-api\",\n            \"resources\": [\n                {\n                    \"_id\": \"wrk_evolution_api\",\n                    \"_type\": \"workspace\",\n                    \"name\": self.title,\n                    \"description\": self.description\n                }\n            ]\n        }\n        \n        # TODO: Converter paths do OpenAPI para requests do Insomnia\n        \n        return collection\n    \n    def add_endpoint_documentation(self, path: str, method: str, \n                                 summary: str, description: str,\n                                 tags: List[str], examples: Dict[str, Any]):\n        \"\"\"Adiciona documenta√ß√£o para um endpoint espec√≠fico\"\"\"\n        # Esta fun√ß√£o seria usada para adicionar documenta√ß√£o\n        # programaticamente para endpoints espec√≠ficos\n        pass\n    \n    def get_api_stats(self) -> Dict[str, Any]:\n        \"\"\"Retorna estat√≠sticas da API para documenta√ß√£o\"\"\"\n        schema = self.get_openapi_schema()\n        \n        return {\n            \"total_endpoints\": len(schema.get(\"paths\", {})),\n            \"total_schemas\": len(schema.get(\"components\", {}).get(\"schemas\", {})),\n            \"security_schemes\": len(schema.get(\"components\", {}).get(\"securitySchemes\", {})),\n            \"tags\": len(schema.get(\"tags\", [])),\n            \"version\": self.version,\n            \"openapi_version\": schema.get(\"openapi\", \"3.0.0\")\n        }\n\n\n# Configura√ß√µes espec√≠ficas para diferentes ambientes\nclass EnvironmentConfig:\n    \"\"\"Configura√ß√µes por ambiente\"\"\"\n    \n    @staticmethod\n    def development() -> Dict[str, Any]:\n        return {\n            \"servers\": [\n                {\n                    \"url\": \"http://localhost:8000\",\n                    \"description\": \"Servidor de Desenvolvimento\"\n                }\n            ],\n            \"debug\": True,\n            \"show_internal_errors\": True\n        }\n    \n    @staticmethod\n    def staging() -> Dict[str, Any]:\n        return {\n            \"servers\": [\n                {\n                    \"url\": \"https://staging-api.evolution.com\",\n                    \"description\": \"Servidor de Staging\"\n                }\n            ],\n            \"debug\": False,\n            \"show_internal_errors\": False\n        }\n    \n    @staticmethod\n    def production() -> Dict[str, Any]:\n        return {\n            \"servers\": [\n                {\n                    \"url\": \"https://api.evolution.com\",\n                    \"description\": \"Servidor de Produ√ß√£o\"\n                }\n            ],\n            \"debug\": False,\n            \"show_internal_errors\": False,\n            \"rate_limit_docs\": True\n        }\n